{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Authentication API",
    "description": "An authentication API implemented in Node.js",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3443",
  "basePath": "/api/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "cookies",
      "name": "jwt"
    }
  },
  "paths": {
    "/test/db": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Test that the API can connect to the database",
        "tags": [
          "Test"
        ],
        "description": "Test that the API can connect to the database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "API can connect to the database",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          },
          "500": {
            "description": "API cannot connect to the database"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "User sign up",
        "tags": [
          "Auth"
        ],
        "description": "Sign the user up in the system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User data to use to sign up",
            "schema": {
              "$ref": "#/definitions/AuthSignup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sign up succeeded",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "400": {
            "description": "Invalid sign up data"
          },
          "500": {
            "description": "Sign up failed"
          }
        }
      }
    },
    "/auth/signup/verify": {
      "get": {
        "summary": "User sign up verification",
        "tags": [
          "Auth"
        ],
        "description": "Verify the sign up of the user in the system",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token to verify the sign up of the user in the system",
            "schema": {
              "properties": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sign up verification succeeded",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "400": {
            "description": "Invalid sign up verification token"
          },
          "500": {
            "description": "Sign up verification failed"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "User sign in",
        "tags": [
          "Auth"
        ],
        "description": "Sign the user in to the system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Credentials to use to sign in",
            "schema": {
              "$ref": "#/definitions/AuthSignin"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sign in succeeded",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Sign in failed"
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "User sign out",
        "tags": [
          "Auth"
        ],
        "description": "Sign the user out of the system",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sign out succeeded",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Sign out failed"
          }
        }
      }
    },
    "/auth/recoverpassword": {
      "post": {
        "summary": "User password recovery",
        "tags": [
          "Auth"
        ],
        "description": "Let the user start the password recovery process",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email to send the verification link to",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Password recovery email sent to the user with the email provided in case it exists",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "500": {
            "description": "Password recovery process failed"
          }
        }
      }
    },
    "/auth/setpassword": {
      "post": {
        "summary": "User password set",
        "tags": [
          "Auth"
        ],
        "description": "Let the user set the password",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token to verify the password set of the user",
            "schema": {
              "properties": "string"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "New user password",
            "schema": {
              "$ref": "#/definitions/UserPassword"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New password set",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "500": {
            "description": "Password set process failed"
          }
        }
      }
    },
    "/user": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Retrieve the user's data",
        "tags": [
          "User"
        ],
        "description": "Let the user retrieve his data",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User's data",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "500": {
            "description": "Failed retrieving the user's data"
          }
        }
      },
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Update the user's data",
        "tags": [
          "User"
        ],
        "description": "Let the user update his data",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User's new data",
            "schema": {
              "$ref": "#/definitions/UserPut"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User's data",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "500": {
            "description": "Failed updating the user's data"
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Delete the user's data",
        "tags": [
          "User"
        ],
        "description": "Let the user delete his data",
        "parameters": [
          {
            "name": "password",
            "in": "body",
            "description": "User's password",
            "schema": {
              "$ref": "#/definitions/UserPassword"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User's data",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "500": {
            "description": "Failed deleting the user's data"
          }
        }
      }
    },
    "/group": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Retrieve the user's groups",
        "tags": [
          "Group"
        ],
        "description": "Let the user retrieve a list of the groups that he belongs to",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User's groups",
            "schema": {
              "$ref": "#/definitions/UserGroups"
            }
          },
          "500": {
            "description": "Failed retrieving the user's groups"
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Create a group",
        "tags": [
          "Group"
        ],
        "description": "Let the user create a new group",
        "parameters": [
          {
            "name": "group",
            "in": "body",
            "description": "Group",
            "schema": {
              "$ref": "#/definitions/GroupName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group created",
            "schema": {
              "$ref": "#/definitions/GroupName"
            }
          },
          "500": {
            "description": "Failed creating the group"
          }
        }
      }
    },
    "/group/:id": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Retrieve the information of the specified group",
        "tags": [
          "Group"
        ],
        "description": "Let the user retrieve the information of the specified group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group to retrieve the details of",
            "schema": {
              "properties": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group's data",
            "schema": {
              "$ref": "#/definitions/GroupData"
            }
          },
          "500": {
            "description": "Failed retrieving the group's information"
          }
        }
      },
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Modify the specified group",
        "tags": [
          "Group"
        ],
        "description": "Let the user modify the details of the specified group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group to modify",
            "schema": {
              "properties": "string"
            }
          },
          {
            "name": "group",
            "in": "body",
            "description": "Group",
            "schema": {
              "$ref": "#/definitions/GroupName"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group updated",
            "schema": {
              "$ref": "#/definitions/GroupName"
            }
          },
          "500": {
            "description": "Failed updating the group"
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Remove the specified group",
        "tags": [
          "Group"
        ],
        "description": "Let the user remove the specified group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the group to remove",
            "schema": {
              "properties": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group's name",
            "schema": {
              "$ref": "#/definitions/GroupName"
            }
          },
          "500": {
            "description": "Failed removing the group"
          }
        }
      }
    },
    "/group/:id/user": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Retrieve the users of the specified group",
        "tags": [
          "Group"
        ],
        "description": "Let the user retrieve a list of the users of the specified group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the target group",
            "schema": {
              "properties": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group's members",
            "schema": {
              "$ref": "#/definitions/GroupUsers"
            }
          },
          "500": {
            "description": "Failed retrieving the group's users"
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Add an user to the specified group",
        "tags": [
          "Group"
        ],
        "description": "Let the user add another user to the specified group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the target group",
            "schema": {
              "properties": "string"
            }
          },
          {
            "name": "user",
            "in": "body",
            "description": "User",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User added to the group",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "500": {
            "description": "Failed adding the user to the specified group"
          }
        }
      },
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Modify the privileges of the specified user in the specified group",
        "tags": [
          "Group"
        ],
        "description": "Let the user modify the privileges of the specified user in the specified group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the target group",
            "schema": {
              "properties": "string"
            }
          },
          {
            "name": "user",
            "in": "body",
            "description": "User",
            "schema": {
              "$ref": "#/definitions/UserPrivileges"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User's privileges updated",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          },
          "500": {
            "description": "Failed updating the users privileges"
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "summary": "Remove the specified user from the specified group",
        "tags": [
          "Group"
        ],
        "description": "Let the user remove an user from the specified group (The user cannot remove itself if he's the only administrator of said group)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the target group",
            "schema": {
              "properties": "string"
            }
          },
          {
            "name": "user",
            "in": "body",
            "description": "User to remove from the specified group",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Group's name",
            "schema": {
              "$ref": "#/definitions/GroupName"
            }
          },
          "500": {
            "description": "Failed removing the group"
          }
        }
      }
    }
  },
  "definitions": {
    "Test": {
      "properties": {
        "status": {
          "type": "number"
        }
      }
    },
    "AuthSignup": {
      "required": [
        "email",
        "password",
        "full_name"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postal": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "AuthSignin": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserEmail": {
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "UserPassword": {
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "UserData": {
      "properties": {
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "last": {
          "type": "string",
          "format": "date-time"
        },
        "full_name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postal": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "UserPut": {
      "properties": {
        "full_name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postal": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "UserGroups": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GroupData"
      }
    },
    "GroupName": {
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "GroupData": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        }
      }
    },
    "GroupUsers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserEmail"
      }
    },
    "UserPrivileges": {
      "properties": {
        "email": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        }
      }
    }
  }
}